version: '3.8'

services:
  nginx:
    depends_on:
      - app
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./persistentdata/logs:/var/log/nginx/
      - ./persistentdata/static:/usr/share/nginx/html/static/
      - ./persistentdata/media:/usr/share/nginx/html/media/
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '10'
    restart: always

  db:
    image: postgres
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file: .env
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./persistentdata/db:/var/lib/postgresql/data/pgdata

  app:
    build: .
    ports:
      - '8000:8000'
    tty: true
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy

volumes:
  pg_data: